// injected into void @Modification methods in IsChained
// original method is renamed to private void __chainvayler__<Name>(..)  
   
// 0: context class name
// 1: method original name


'{'
		if (! {0}.isBound()) '{' 
			__chainvayler__{1} ( $$ );
			return;
		}
		
		Context context = {0}.getInstance();
		
		if (context.isInTransaction() || context.isInRemoteTransaction()) '{' 
			__chainvayler__{1} ( $$ );
			return;
		}
		
		if (context.isInQuery())
			throw new ModificationInSynchException();
		
		context.setInTransaction(true);
		try '{'
			context.prevayler.execute(new MethodTransaction(
					this, new MethodCall("__chainvayler__{1}", $class, $sig), $args ));
		} finally '{'
			context.setInTransaction(false);
		}
}
